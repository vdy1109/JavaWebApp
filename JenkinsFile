
pipeline {
    agent any

    parameters {
        string(name: 'GIT_REPO', defaultValue: 'https://github.com/vdy1109/JavaWebApp.git')
        string(name: 'BRANCH', defaultValue: 'main')
        string(name: 'AWS_REGION', defaultValue: 'us-east-1')
        string(name: 'DEPLOYMENT_NAME', defaultValue: 'javawebapp')
        string(name: 'CONTAINER_NAME', defaultValue: 'javawebapp')
        string(name: 'ECR_REPO', defaultValue: 'commonrepo')
    }

    environment {
        BUILD_TAG = "${BUILD_NUMBER}"
        ECR_URI = "169634835941.dkr.ecr.${params.AWS_REGION}.amazonaws.com"
        IMAGE_NAME = "${params.DEPLOYMENT_NAME}"
        FULL_IMAGE_TAG = "${ECR_URI}/${params.ECR_REPO}/${IMAGE_NAME}:${BUILD_TAG}"
        LATEST_IMAGE_TAG = "${ECR_URI}/${params.ECR_REPO}/${IMAGE_NAME}:latest"
    }

    stages {
        stage('Checkout') {
            steps {
                git url: "${params.GIT_REPO}", branch: "${params.BRANCH}"
            }
        }

        stage('Login to ECR') {
            steps {
                sh """
                aws ecr get-login-password --region ${params.AWS_REGION} | \
                docker login --username AWS --password-stdin ${ECR_URI}
                """
            }
        }

        stage('Build Docker Image') {
            steps {
                sh """
                docker build -t ${IMAGE_NAME}:${BUILD_TAG} .
                docker tag ${IMAGE_NAME}:${BUILD_TAG} ${FULL_IMAGE_TAG}
                docker tag ${IMAGE_NAME}:${BUILD_TAG} ${LATEST_IMAGE_TAG}
                """
            }
        }

        stage('Push to ECR') {
            steps {
                sh """
                docker push ${FULL_IMAGE_TAG}
                docker push ${LATEST_IMAGE_TAG}
                """
            }
        }

        stage('Deploy to EKS') {
            steps {
                sh """
                kubectl apply -f deployment.yaml
                kubectl set image deployment/${params.DEPLOYMENT_NAME} ${params.CONTAINER_NAME}=${LATEST_IMAGE_TAG}
                kubectl rollout status deployment/${params.DEPLOYMENT_NAME}
                """
            }
        }
    }

    post {
        success {
            echo "Successfully deployed ${LATEST_IMAGE_TAG} to EKS!"
        }
        failure {
            echo "Deployment failed!"
        }
    }
}
